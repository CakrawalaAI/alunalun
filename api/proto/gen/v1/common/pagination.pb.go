// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1/common/pagination.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PageRequest for paginated queries
type PageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`   // Max items per page
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // Number of items to skip
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`  // Alternative cursor-based pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	mi := &file_v1_common_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_common_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_v1_common_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PageRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// PageResponse with pagination metadata
type PageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                            // Total number of items
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                            // Items per page
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                          // Current offset
	HasMore       bool                   `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`         // Whether more pages exist
	NextCursor    string                 `protobuf:"bytes,5,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // Cursor for next page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageResponse) Reset() {
	*x = PageResponse{}
	mi := &file_v1_common_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageResponse) ProtoMessage() {}

func (x *PageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_common_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageResponse.ProtoReflect.Descriptor instead.
func (*PageResponse) Descriptor() ([]byte, []int) {
	return file_v1_common_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *PageResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PageResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PageResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *PageResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

var File_v1_common_pagination_proto protoreflect.FileDescriptor

const file_v1_common_pagination_proto_rawDesc = "" +
	"\n" +
	"\x1av1/common/pagination.proto\x12\rapi.v1.common\"S\n" +
	"\vPageRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\x8e\x01\n" +
	"\fPageResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12\x19\n" +
	"\bhas_more\x18\x04 \x01(\bR\ahasMore\x12\x1f\n" +
	"\vnext_cursor\x18\x05 \x01(\tR\n" +
	"nextCursorB:Z8github.com/ckrwl/alunalun/api/gen/api/v1/common;commonv1b\x06proto3"

var (
	file_v1_common_pagination_proto_rawDescOnce sync.Once
	file_v1_common_pagination_proto_rawDescData []byte
)

func file_v1_common_pagination_proto_rawDescGZIP() []byte {
	file_v1_common_pagination_proto_rawDescOnce.Do(func() {
		file_v1_common_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_common_pagination_proto_rawDesc), len(file_v1_common_pagination_proto_rawDesc)))
	})
	return file_v1_common_pagination_proto_rawDescData
}

var file_v1_common_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_common_pagination_proto_goTypes = []any{
	(*PageRequest)(nil),  // 0: api.v1.common.PageRequest
	(*PageResponse)(nil), // 1: api.v1.common.PageResponse
}
var file_v1_common_pagination_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_common_pagination_proto_init() }
func file_v1_common_pagination_proto_init() {
	if File_v1_common_pagination_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_common_pagination_proto_rawDesc), len(file_v1_common_pagination_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_common_pagination_proto_goTypes,
		DependencyIndexes: file_v1_common_pagination_proto_depIdxs,
		MessageInfos:      file_v1_common_pagination_proto_msgTypes,
	}.Build()
	File_v1_common_pagination_proto = out.File
	file_v1_common_pagination_proto_goTypes = nil
	file_v1_common_pagination_proto_depIdxs = nil
}
