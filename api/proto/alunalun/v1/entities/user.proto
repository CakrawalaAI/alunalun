syntax = "proto3";

package alunalun.v1.entities;

import "google/protobuf/timestamp.proto";
import "alunalun/v1/common/timestamp.proto";

option go_package = "github.com/ckrwl/alunalun/api/gen/go/alunalun/v1/entities;entities";

// User represents a user in the system
message User {
  // Unique identifier for the user
  // Format: UUID or similar unique string
  string id = 1;
  
  // Unique username for the user
  // Constraints: lowercase, alphanumeric + underscore, 3-30 chars
  string username = 2; // required, unique
  
  // Email address
  // Must be valid email format
  string email = 3; // required, unique
  
  // User's display name
  // This is what other users see
  string display_name = 4;
  
  // Profile information
  Profile profile = 5;
  
  // Account status
  AccountStatus status = 6;
  
  // User's role in the system
  repeated Role roles = 7;
  
  // Account verification status
  VerificationStatus verification = 8;
  
  // User preferences/settings
  UserSettings settings = 9;
  
  // Statistics about the user
  UserStats stats = 10;
  
  // Audit information
  alunalun.v1.common.AuditInfo audit_info = 11;
  
  // Reserved for future use
  reserved 12 to 20;
  reserved "password", "password_hash"; // Never send passwords in responses
}

// Profile contains user profile information
message Profile {
  // User's full name
  string full_name = 1;
  
  // User's bio/description
  string bio = 2; // max 500 chars
  
  // Profile picture URL
  string avatar_url = 3;
  
  // Cover/banner image URL
  string cover_url = 4;
  
  // Location (city, country, etc.)
  string location = 5;
  
  // Website URL
  string website = 6;
  
  // Birth date (for age verification)
  google.protobuf.Timestamp birth_date = 7;
  
  // Phone number (E.164 format)
  string phone_number = 8;
  
  // Social media links
  map<string, string> social_links = 9; // key: platform, value: URL/handle
}

// AccountStatus represents the status of a user account
enum AccountStatus {
  ACCOUNT_STATUS_UNSPECIFIED = 0;
  ACCOUNT_STATUS_ACTIVE = 1;       // Normal active account
  ACCOUNT_STATUS_INACTIVE = 2;     // Temporarily inactive
  ACCOUNT_STATUS_SUSPENDED = 3;    // Suspended by admin
  ACCOUNT_STATUS_BANNED = 4;       // Permanently banned
  ACCOUNT_STATUS_DELETED = 5;      // Soft deleted
  ACCOUNT_STATUS_PENDING = 6;      // Awaiting activation
}

// Role represents a user's role in the system
enum Role {
  ROLE_UNSPECIFIED = 0;
  ROLE_USER = 1;        // Regular user
  ROLE_MODERATOR = 2;   // Content moderator
  ROLE_ADMIN = 3;       // System administrator
  ROLE_SUPER_ADMIN = 4; // Super administrator
}

// VerificationStatus tracks account verification
message VerificationStatus {
  // Email verification
  bool email_verified = 1;
  google.protobuf.Timestamp email_verified_at = 2;
  
  // Phone verification
  bool phone_verified = 3;
  google.protobuf.Timestamp phone_verified_at = 4;
  
  // Identity verification (KYC)
  bool identity_verified = 5;
  google.protobuf.Timestamp identity_verified_at = 6;
  
  // Blue checkmark or similar
  bool is_verified_account = 7;
}

// UserSettings contains user preferences
message UserSettings {
  // Language preference (ISO 639-1 code)
  string language = 1;
  
  // Timezone (IANA timezone)
  string timezone = 2;
  
  // Privacy settings
  PrivacySettings privacy = 3;
  
  // Notification preferences
  NotificationSettings notifications = 4;
  
  // Theme preference
  enum Theme {
    THEME_UNSPECIFIED = 0;
    THEME_LIGHT = 1;
    THEME_DARK = 2;
    THEME_AUTO = 3; // Follow system
  }
  Theme theme = 5;
}

// PrivacySettings controls privacy preferences
message PrivacySettings {
  // Profile visibility
  enum Visibility {
    VISIBILITY_UNSPECIFIED = 0;
    VISIBILITY_PUBLIC = 1;
    VISIBILITY_FRIENDS = 2;
    VISIBILITY_PRIVATE = 3;
  }
  Visibility profile_visibility = 1;
  
  // Whether the user appears in search results
  bool searchable = 2;
  
  // Whether to show online status
  bool show_online_status = 3;
  
  // Whether to show last seen time
  bool show_last_seen = 4;
  
  // Who can send friend requests
  enum ContactPermission {
    CONTACT_PERMISSION_UNSPECIFIED = 0;
    CONTACT_PERMISSION_EVERYONE = 1;
    CONTACT_PERMISSION_FRIENDS_OF_FRIENDS = 2;
    CONTACT_PERMISSION_NONE = 3;
  }
  ContactPermission contact_permission = 5;
}

// NotificationSettings controls notification preferences
message NotificationSettings {
  // Email notifications
  bool email_enabled = 1;
  
  // Push notifications
  bool push_enabled = 2;
  
  // SMS notifications
  bool sms_enabled = 3;
  
  // Specific notification types
  bool new_follower = 4;
  bool new_pin = 5;
  bool mentions = 6;
  bool comments = 7;
  bool likes = 8;
  
  // Digest frequency
  enum DigestFrequency {
    DIGEST_FREQUENCY_UNSPECIFIED = 0;
    DIGEST_FREQUENCY_NEVER = 1;
    DIGEST_FREQUENCY_DAILY = 2;
    DIGEST_FREQUENCY_WEEKLY = 3;
    DIGEST_FREQUENCY_MONTHLY = 4;
  }
  DigestFrequency digest_frequency = 9;
}

// UserStats contains user statistics
message UserStats {
  // Number of followers
  int32 followers_count = 1;
  
  // Number of following
  int32 following_count = 2;
  
  // Number of pins created
  int32 pins_count = 3;
  
  // Number of likes received
  int32 likes_received_count = 4;
  
  // Account creation date
  google.protobuf.Timestamp member_since = 5;
  
  // Last activity timestamp
  google.protobuf.Timestamp last_active_at = 6;
}