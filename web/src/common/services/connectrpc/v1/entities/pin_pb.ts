// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file v1/entities/pin.proto (package api.v1.entities, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { User } from "./user_pb";
import { file_v1_entities_user } from "./user_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/entities/pin.proto.
 */
export const file_v1_entities_pin: GenFile = /*@__PURE__*/
  fileDesc("ChV2MS9lbnRpdGllcy9waW4ucHJvdG8SD2FwaS52MS5lbnRpdGllcyLWAQoDUGluEgoKAmlkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDwoHY29udGVudBgDIAEoCRIrCghsb2NhdGlvbhgEIAEoCzIZLmFwaS52MS5lbnRpdGllcy5Mb2NhdGlvbhISCgpjcmVhdGVkX2F0GAUgASgDEhIKCnVwZGF0ZWRfYXQYBiABKAMSKgoGYXV0aG9yGAcgASgLMhUuYXBpLnYxLmVudGl0aWVzLlVzZXJIAIgBARIVCg1jb21tZW50X2NvdW50GAggASgFQgkKB19hdXRob3IidQoITG9jYXRpb24SEAoIbGF0aXR1ZGUYASABKAESEQoJbG9uZ2l0dWRlGAIgASgBEhUKCGFsdGl0dWRlGAMgASgBSACIAQESFAoHZ2VvaGFzaBgEIAEoCUgBiAEBQgsKCV9hbHRpdHVkZUIKCghfZ2VvaGFzaCKoAQoHQ29tbWVudBIKCgJpZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJEg8KB2NvbnRlbnQYAyABKAkSFgoJcGFyZW50X2lkGAQgASgJSACIAQESEgoKY3JlYXRlZF9hdBgFIAEoAxIqCgZhdXRob3IYBiABKAsyFS5hcGkudjEuZW50aXRpZXMuVXNlckgBiAEBQgwKCl9wYXJlbnRfaWRCCQoHX2F1dGhvckJPWk1naXRodWIuY29tL3JhZGphdGhhaGVyL2FsdW5hbHVuL2FwaS9pbnRlcm5hbC9wcm90b2NnZW4vdjEvZW50aXRpZXM7ZW50aXRpZXN2MWIGcHJvdG8z", [file_v1_entities_user]);

/**
 * Pin represents a pin on the map (composed from posts + posts_location)
 *
 * @generated from message api.v1.entities.Pin
 */
export type Pin = Message<"api.v1.entities.Pin"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Title/description of the pin
   *
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * Geographic location
   *
   * @generated from field: api.v1.entities.Location location = 4;
   */
  location?: Location;

  /**
   * Unix timestamp
   *
   * @generated from field: int64 created_at = 5;
   */
  createdAt: bigint;

  /**
   * Unix timestamp
   *
   * @generated from field: int64 updated_at = 6;
   */
  updatedAt: bigint;

  /**
   * API-only fields (joined/computed from database)
   *
   * Joined from users table
   *
   * @generated from field: optional api.v1.entities.User author = 7;
   */
  author?: User;

  /**
   * Computed from posts with parent_id
   *
   * @generated from field: int32 comment_count = 8;
   */
  commentCount: number;
};

/**
 * Describes the message api.v1.entities.Pin.
 * Use `create(PinSchema)` to create a new message.
 */
export const PinSchema: GenMessage<Pin> = /*@__PURE__*/
  messageDesc(file_v1_entities_pin, 0);

/**
 * Location represents geographic coordinates
 *
 * @generated from message api.v1.entities.Location
 */
export type Location = Message<"api.v1.entities.Location"> & {
  /**
   * Latitude in decimal degrees
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * Longitude in decimal degrees
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * Altitude in meters (optional)
   *
   * @generated from field: optional double altitude = 3;
   */
  altitude?: number;

  /**
   * Geohash for proximity queries
   *
   * @generated from field: optional string geohash = 4;
   */
  geohash?: string;
};

/**
 * Describes the message api.v1.entities.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_v1_entities_pin, 1);

/**
 * Comment represents a comment on a pin or reply to another comment
 *
 * @generated from message api.v1.entities.Comment
 */
export type Comment = Message<"api.v1.entities.Comment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string content = 3;
   */
  content: string;

  /**
   * For nested replies (NULL for direct pin comments)
   *
   * @generated from field: optional string parent_id = 4;
   */
  parentId?: string;

  /**
   * Unix timestamp
   *
   * @generated from field: int64 created_at = 5;
   */
  createdAt: bigint;

  /**
   * Joined from users table
   *
   * @generated from field: optional api.v1.entities.User author = 6;
   */
  author?: User;
};

/**
 * Describes the message api.v1.entities.Comment.
 * Use `create(CommentSchema)` to create a new message.
 */
export const CommentSchema: GenMessage<Comment> = /*@__PURE__*/
  messageDesc(file_v1_entities_pin, 2);

