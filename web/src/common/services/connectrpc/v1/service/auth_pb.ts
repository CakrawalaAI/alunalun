// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file v1/service/auth.proto (package api.v1.service.auth, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { User } from "../entities/user_pb";
import { file_v1_entities_user } from "../entities/user_pb";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/service/auth.proto.
 */
export const file_v1_service_auth: GenFile = /*@__PURE__*/
  fileDesc("ChV2MS9zZXJ2aWNlL2F1dGgucHJvdG8SE2FwaS52MS5zZXJ2aWNlLmF1dGgiKAoUQ2hlY2tVc2VybmFtZVJlcXVlc3QSEAoIdXNlcm5hbWUYASABKAkiOwoVQ2hlY2tVc2VybmFtZVJlc3BvbnNlEhEKCWF2YWlsYWJsZRgBIAEoCBIPCgdtZXNzYWdlGAIgASgJIigKFEluaXRBbm9ueW1vdXNSZXF1ZXN0EhAKCHVzZXJuYW1lGAEgASgJIkwKFUluaXRBbm9ueW1vdXNSZXNwb25zZRINCgV0b2tlbhgBIAEoCRISCgpzZXNzaW9uX2lkGAIgASgJEhAKCHVzZXJuYW1lGAMgASgJImMKE0F1dGhlbnRpY2F0ZVJlcXVlc3QSEAoIcHJvdmlkZXIYASABKAkSEgoKY3JlZGVudGlhbBgCIAEoCRIXCgpzZXNzaW9uX2lkGAMgASgJSACIAQFCDQoLX3Nlc3Npb25faWQiZAoUQXV0aGVudGljYXRlUmVzcG9uc2USDQoFdG9rZW4YASABKAkSIwoEdXNlchgCIAEoCzIVLmFwaS52MS5lbnRpdGllcy5Vc2VyEhgKEHNlc3Npb25fbWlncmF0ZWQYAyABKAgiLAoTUmVmcmVzaFRva2VuUmVxdWVzdBIVCg1leHBpcmVkX3Rva2VuGAEgASgJIiUKFFJlZnJlc2hUb2tlblJlc3BvbnNlEg0KBXRva2VuGAEgASgJMqcDCgtBdXRoU2VydmljZRJmCg1DaGVja1VzZXJuYW1lEikuYXBpLnYxLnNlcnZpY2UuYXV0aC5DaGVja1VzZXJuYW1lUmVxdWVzdBoqLmFwaS52MS5zZXJ2aWNlLmF1dGguQ2hlY2tVc2VybmFtZVJlc3BvbnNlEmYKDUluaXRBbm9ueW1vdXMSKS5hcGkudjEuc2VydmljZS5hdXRoLkluaXRBbm9ueW1vdXNSZXF1ZXN0GiouYXBpLnYxLnNlcnZpY2UuYXV0aC5Jbml0QW5vbnltb3VzUmVzcG9uc2USYwoMQXV0aGVudGljYXRlEiguYXBpLnYxLnNlcnZpY2UuYXV0aC5BdXRoZW50aWNhdGVSZXF1ZXN0GikuYXBpLnYxLnNlcnZpY2UuYXV0aC5BdXRoZW50aWNhdGVSZXNwb25zZRJjCgxSZWZyZXNoVG9rZW4SKC5hcGkudjEuc2VydmljZS5hdXRoLlJlZnJlc2hUb2tlblJlcXVlc3QaKS5hcGkudjEuc2VydmljZS5hdXRoLlJlZnJlc2hUb2tlblJlc3BvbnNlQldaVWdpdGh1Yi5jb20vcmFkamF0aGFoZXIvYWx1bmFsdW4vYXBpL2ludGVybmFsL3Byb3RvY2dlbi92MS9hdXRoX3NlcnZpY2U7YXV0aF9zZXJ2aWNldjFiBnByb3RvMw", [file_v1_entities_user, file_google_protobuf_field_mask]);

/**
 * CheckUsernameRequest checks availability
 *
 * @generated from message api.v1.service.auth.CheckUsernameRequest
 */
export type CheckUsernameRequest = Message<"api.v1.service.auth.CheckUsernameRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;
};

/**
 * Describes the message api.v1.service.auth.CheckUsernameRequest.
 * Use `create(CheckUsernameRequestSchema)` to create a new message.
 */
export const CheckUsernameRequestSchema: GenMessage<CheckUsernameRequest> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 0);

/**
 * CheckUsernameResponse returns availability
 *
 * @generated from message api.v1.service.auth.CheckUsernameResponse
 */
export type CheckUsernameResponse = Message<"api.v1.service.auth.CheckUsernameResponse"> & {
  /**
   * @generated from field: bool available = 1;
   */
  available: boolean;

  /**
   * Optional reason if not available
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message api.v1.service.auth.CheckUsernameResponse.
 * Use `create(CheckUsernameResponseSchema)` to create a new message.
 */
export const CheckUsernameResponseSchema: GenMessage<CheckUsernameResponse> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 1);

/**
 * InitAnonymousRequest creates anonymous session
 *
 * @generated from message api.v1.service.auth.InitAnonymousRequest
 */
export type InitAnonymousRequest = Message<"api.v1.service.auth.InitAnonymousRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;
};

/**
 * Describes the message api.v1.service.auth.InitAnonymousRequest.
 * Use `create(InitAnonymousRequestSchema)` to create a new message.
 */
export const InitAnonymousRequestSchema: GenMessage<InitAnonymousRequest> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 2);

/**
 * InitAnonymousResponse returns anonymous token
 *
 * @generated from message api.v1.service.auth.InitAnonymousResponse
 */
export type InitAnonymousResponse = Message<"api.v1.service.auth.InitAnonymousResponse"> & {
  /**
   * JWT with no expiration
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * Server-generated UUID
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * Confirmed username
   *
   * @generated from field: string username = 3;
   */
  username: string;
};

/**
 * Describes the message api.v1.service.auth.InitAnonymousResponse.
 * Use `create(InitAnonymousResponseSchema)` to create a new message.
 */
export const InitAnonymousResponseSchema: GenMessage<InitAnonymousResponse> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 3);

/**
 * AuthenticateRequest for provider-based auth
 *
 * @generated from message api.v1.service.auth.AuthenticateRequest
 */
export type AuthenticateRequest = Message<"api.v1.service.auth.AuthenticateRequest"> & {
  /**
   * "google", "magic_link", etc
   *
   * @generated from field: string provider = 1;
   */
  provider: string;

  /**
   * ID token, magic token, etc
   *
   * @generated from field: string credential = 2;
   */
  credential: string;

  /**
   * For migration from anonymous
   *
   * @generated from field: optional string session_id = 3;
   */
  sessionId?: string;
};

/**
 * Describes the message api.v1.service.auth.AuthenticateRequest.
 * Use `create(AuthenticateRequestSchema)` to create a new message.
 */
export const AuthenticateRequestSchema: GenMessage<AuthenticateRequest> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 4);

/**
 * AuthenticateResponse returns auth token
 *
 * @generated from message api.v1.service.auth.AuthenticateResponse
 */
export type AuthenticateResponse = Message<"api.v1.service.auth.AuthenticateResponse"> & {
  /**
   * JWT with 1hr expiration
   *
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: api.v1.entities.User user = 2;
   */
  user?: User;

  /**
   * If session_id was provided and migrated
   *
   * @generated from field: bool session_migrated = 3;
   */
  sessionMigrated: boolean;
};

/**
 * Describes the message api.v1.service.auth.AuthenticateResponse.
 * Use `create(AuthenticateResponseSchema)` to create a new message.
 */
export const AuthenticateResponseSchema: GenMessage<AuthenticateResponse> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 5);

/**
 * RefreshTokenRequest refreshes expired JWT
 *
 * @generated from message api.v1.service.auth.RefreshTokenRequest
 */
export type RefreshTokenRequest = Message<"api.v1.service.auth.RefreshTokenRequest"> & {
  /**
   * The expired JWT to refresh
   *
   * @generated from field: string expired_token = 1;
   */
  expiredToken: string;
};

/**
 * Describes the message api.v1.service.auth.RefreshTokenRequest.
 * Use `create(RefreshTokenRequestSchema)` to create a new message.
 */
export const RefreshTokenRequestSchema: GenMessage<RefreshTokenRequest> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 6);

/**
 * RefreshTokenResponse returns new token
 *
 * @generated from message api.v1.service.auth.RefreshTokenResponse
 */
export type RefreshTokenResponse = Message<"api.v1.service.auth.RefreshTokenResponse"> & {
  /**
   * New JWT with 1hr expiration
   *
   * @generated from field: string token = 1;
   */
  token: string;
};

/**
 * Describes the message api.v1.service.auth.RefreshTokenResponse.
 * Use `create(RefreshTokenResponseSchema)` to create a new message.
 */
export const RefreshTokenResponseSchema: GenMessage<RefreshTokenResponse> = /*@__PURE__*/
  messageDesc(file_v1_service_auth, 7);

/**
 * AuthService handles authentication flows
 *
 * @generated from service api.v1.service.auth.AuthService
 */
export const AuthService: GenService<{
  /**
   * Check if username is available
   *
   * @generated from rpc api.v1.service.auth.AuthService.CheckUsername
   */
  checkUsername: {
    methodKind: "unary";
    input: typeof CheckUsernameRequestSchema;
    output: typeof CheckUsernameResponseSchema;
  },
  /**
   * Initialize anonymous session (generates session_id + token)
   *
   * @generated from rpc api.v1.service.auth.AuthService.InitAnonymous
   */
  initAnonymous: {
    methodKind: "unary";
    input: typeof InitAnonymousRequestSchema;
    output: typeof InitAnonymousResponseSchema;
  },
  /**
   * Authenticate with provider (Google, magic link, etc)
   *
   * @generated from rpc api.v1.service.auth.AuthService.Authenticate
   */
  authenticate: {
    methodKind: "unary";
    input: typeof AuthenticateRequestSchema;
    output: typeof AuthenticateResponseSchema;
  },
  /**
   * Refresh authenticated tokens (anonymous tokens never expire)
   *
   * @generated from rpc api.v1.service.auth.AuthService.RefreshToken
   */
  refreshToken: {
    methodKind: "unary";
    input: typeof RefreshTokenRequestSchema;
    output: typeof RefreshTokenResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_service_auth, 0);

